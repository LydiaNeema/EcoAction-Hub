"""initial migrations

Revision ID: ce809c024685
Revises: 
Create Date: 2025-10-22 16:52:39.132350

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce809c024685'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('icon_url', sa.String(length=255), nullable=True),
    sa.Column('requirement_type', sa.String(length=50), nullable=True),
    sa.Column('requirement_value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.Column('affected_areas', sa.String(length=200), nullable=True),
    sa.Column('county', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('county', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reporter_name', sa.String(length=100), nullable=True),
    sa.Column('reporter_phone', sa.String(length=20), nullable=True),
    sa.Column('reporter_email', sa.String(length=100), nullable=True),
    sa.Column('emergency_type', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('county', sa.String(length=100), nullable=True),
    sa.Column('area', sa.String(length=120), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('member_since', sa.Date(), server_default=sa.text('(CURRENT_DATE)'), nullable=True),
    sa.Column('issues_reported', sa.Integer(), nullable=True),
    sa.Column('alerts_responded', sa.Integer(), nullable=True),
    sa.Column('community_impact', sa.Integer(), nullable=True),
    sa.Column('trees_planted', sa.Integer(), nullable=True),
    sa.Column('impact_points', sa.Integer(), nullable=True),
    sa.Column('issues_this_month', sa.Integer(), nullable=True),
    sa.Column('alerts_this_month', sa.Integer(), nullable=True),
    sa.Column('impact_this_month', sa.Integer(), nullable=True),
    sa.Column('trees_this_month', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profiles_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('achievement_id', sa.Integer(), nullable=True),
    sa.Column('unlocked_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], name=op.f('fk_user_achievements_achievement_id_achievements')),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name=op.f('fk_user_achievements_profile_id_profiles')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_achievements')
    op.drop_table('profiles')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('emergency_reports')
    op.drop_table('emergency_contacts')
    op.drop_table('emergency_alerts')
    op.drop_table('achievements')
    # ### end Alembic commands ###
